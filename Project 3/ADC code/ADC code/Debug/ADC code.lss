
ADC code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000004f2  00000586  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800104  00800104  0000058a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000058a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000005f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000073a  00000000  00000000  00000630  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000687  00000000  00000000  00000d6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000024d  00000000  00000000  000013f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000b0  00000000  00000000  00001640  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ac  00000000  00000000  000016f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ff  00000000  00000000  00001a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001b9b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 85 00 	jmp	0x10a	; 0x10a <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ef       	ldi	r30, 0xF2	; 242
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e0       	ldi	r26, 0x04	; 4
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 30       	cpi	r26, 0x08	; 8
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 6a 00 	call	0xd4	; 0xd4 <main>
  9e:	0c 94 77 02 	jmp	0x4ee	; 0x4ee <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <setupADC>:
int voltref= 5;


void setupADC()
{
	ADMUX |= (1  << REFS0) | (1 << MUX0) | (1 << MUX2); // set the Voltage reference to be AVCC (REFS0) and Enable ADC5 which is on PC5 
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	85 64       	ori	r24, 0x45	; 69
  ae:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN) | (1 << ADIE) | (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2); // ADC Enable (ADEN) make the ADC Interrupt on completions (ADIE), Set Presacler to 128 
  b0:	ea e7       	ldi	r30, 0x7A	; 122
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	8f 68       	ori	r24, 0x8F	; 143
  b8:	80 83       	st	Z, r24
	DIDR0 |= (1 << ADC5D);
  ba:	ee e7       	ldi	r30, 0x7E	; 126
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	80 62       	ori	r24, 0x20	; 32
  c2:	80 83       	st	Z, r24
	
	sei();
  c4:	78 94       	sei
  c6:	08 95       	ret

000000c8 <AdcConversion>:
}

void AdcConversion()
{
	ADCSRA |= (1 << ADSC); // set's a one to the register that starts the conversion when it's done it'll trigger an interrupt and set this bit to be 0 again to restart just set it to 1 again and it'll start again.
  c8:	ea e7       	ldi	r30, 0x7A	; 122
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	80 64       	ori	r24, 0x40	; 64
  d0:	80 83       	st	Z, r24
  d2:	08 95       	ret

000000d4 <main>:
}

int main(void)
{
	DDRD |= (1 << 0);
  d4:	8a b1       	in	r24, 0x0a	; 10
  d6:	81 60       	ori	r24, 0x01	; 1
  d8:	8a b9       	out	0x0a, r24	; 10
	setupADC();
  da:	0e 94 53 00 	call	0xa6	; 0xa6 <setupADC>
	AdcConversion();
  de:	0e 94 64 00 	call	0xc8	; 0xc8 <AdcConversion>
    /* Replace with your application code */
    while (1) 
    {
		if (Weightvalue >= TargetWeight )
  e2:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <__data_end>
  e6:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <__data_end+0x1>
  ea:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end+0x2>
  ee:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x3>
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	46 e9       	ldi	r20, 0x96	; 150
  f8:	53 e4       	ldi	r21, 0x43	; 67
  fa:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <__gesf2>
  fe:	88 23       	and	r24, r24
 100:	84 f3       	brlt	.-32     	; 0xe2 <main+0xe>
			{
				PORTD |= (1<< 0);
 102:	8b b1       	in	r24, 0x0b	; 11
 104:	81 60       	ori	r24, 0x01	; 1
 106:	8b b9       	out	0x0b, r24	; 11
 108:	ec cf       	rjmp	.-40     	; 0xe2 <main+0xe>

0000010a <__vector_21>:
			}
    }
}

ISR(ADC_vect)
{
 10a:	1f 92       	push	r1
 10c:	0f 92       	push	r0
 10e:	0f b6       	in	r0, 0x3f	; 63
 110:	0f 92       	push	r0
 112:	11 24       	eor	r1, r1
 114:	cf 92       	push	r12
 116:	df 92       	push	r13
 118:	ef 92       	push	r14
 11a:	ff 92       	push	r15
 11c:	2f 93       	push	r18
 11e:	3f 93       	push	r19
 120:	4f 93       	push	r20
 122:	5f 93       	push	r21
 124:	6f 93       	push	r22
 126:	7f 93       	push	r23
 128:	8f 93       	push	r24
 12a:	9f 93       	push	r25
 12c:	af 93       	push	r26
 12e:	bf 93       	push	r27
 130:	ef 93       	push	r30
 132:	ff 93       	push	r31
	Digitalvalue=ADC; //set's a variable to equal the analog to digital conversion value 
 134:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 138:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	0e 94 53 01 	call	0x2a6	; 0x2a6 <__floatunsisf>
 144:	6b 01       	movw	r12, r22
 146:	7c 01       	movw	r14, r24
	Weightvalue = (Digitalvalue*bit)/voltref;
 148:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <bit>
 14c:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <bit+0x1>
 150:	07 2e       	mov	r0, r23
 152:	00 0c       	add	r0, r0
 154:	88 0b       	sbc	r24, r24
 156:	99 0b       	sbc	r25, r25
 158:	0e 94 55 01 	call	0x2aa	; 0x2aa <__floatsisf>
 15c:	a7 01       	movw	r20, r14
 15e:	96 01       	movw	r18, r12
 160:	0e 94 e6 01 	call	0x3cc	; 0x3cc <__mulsf3>
 164:	6b 01       	movw	r12, r22
 166:	7c 01       	movw	r14, r24
 168:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 16c:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 170:	07 2e       	mov	r0, r23
 172:	00 0c       	add	r0, r0
 174:	88 0b       	sbc	r24, r24
 176:	99 0b       	sbc	r25, r25
 178:	0e 94 55 01 	call	0x2aa	; 0x2aa <__floatsisf>
 17c:	9b 01       	movw	r18, r22
 17e:	ac 01       	movw	r20, r24
 180:	c7 01       	movw	r24, r14
 182:	b6 01       	movw	r22, r12
 184:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <__divsf3>
 188:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <__data_end>
 18c:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <__data_end+0x1>
 190:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end+0x2>
 194:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x3>
 198:	ff 91       	pop	r31
 19a:	ef 91       	pop	r30
 19c:	bf 91       	pop	r27
 19e:	af 91       	pop	r26
 1a0:	9f 91       	pop	r25
 1a2:	8f 91       	pop	r24
 1a4:	7f 91       	pop	r23
 1a6:	6f 91       	pop	r22
 1a8:	5f 91       	pop	r21
 1aa:	4f 91       	pop	r20
 1ac:	3f 91       	pop	r19
 1ae:	2f 91       	pop	r18
 1b0:	ff 90       	pop	r15
 1b2:	ef 90       	pop	r14
 1b4:	df 90       	pop	r13
 1b6:	cf 90       	pop	r12
 1b8:	0f 90       	pop	r0
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	0f 90       	pop	r0
 1be:	1f 90       	pop	r1
 1c0:	18 95       	reti

000001c2 <__divsf3>:
 1c2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <__divsf3x>
 1c6:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__fp_round>
 1ca:	0e 94 a0 01 	call	0x340	; 0x340 <__fp_pscB>
 1ce:	58 f0       	brcs	.+22     	; 0x1e6 <__divsf3+0x24>
 1d0:	0e 94 99 01 	call	0x332	; 0x332 <__fp_pscA>
 1d4:	40 f0       	brcs	.+16     	; 0x1e6 <__divsf3+0x24>
 1d6:	29 f4       	brne	.+10     	; 0x1e2 <__divsf3+0x20>
 1d8:	5f 3f       	cpi	r21, 0xFF	; 255
 1da:	29 f0       	breq	.+10     	; 0x1e6 <__divsf3+0x24>
 1dc:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_inf>
 1e0:	51 11       	cpse	r21, r1
 1e2:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <__fp_szero>
 1e6:	0c 94 96 01 	jmp	0x32c	; 0x32c <__fp_nan>

000001ea <__divsf3x>:
 1ea:	0e 94 b8 01 	call	0x370	; 0x370 <__fp_split3>
 1ee:	68 f3       	brcs	.-38     	; 0x1ca <__divsf3+0x8>

000001f0 <__divsf3_pse>:
 1f0:	99 23       	and	r25, r25
 1f2:	b1 f3       	breq	.-20     	; 0x1e0 <__divsf3+0x1e>
 1f4:	55 23       	and	r21, r21
 1f6:	91 f3       	breq	.-28     	; 0x1dc <__divsf3+0x1a>
 1f8:	95 1b       	sub	r25, r21
 1fa:	55 0b       	sbc	r21, r21
 1fc:	bb 27       	eor	r27, r27
 1fe:	aa 27       	eor	r26, r26
 200:	62 17       	cp	r22, r18
 202:	73 07       	cpc	r23, r19
 204:	84 07       	cpc	r24, r20
 206:	38 f0       	brcs	.+14     	; 0x216 <__divsf3_pse+0x26>
 208:	9f 5f       	subi	r25, 0xFF	; 255
 20a:	5f 4f       	sbci	r21, 0xFF	; 255
 20c:	22 0f       	add	r18, r18
 20e:	33 1f       	adc	r19, r19
 210:	44 1f       	adc	r20, r20
 212:	aa 1f       	adc	r26, r26
 214:	a9 f3       	breq	.-22     	; 0x200 <__divsf3_pse+0x10>
 216:	35 d0       	rcall	.+106    	; 0x282 <__divsf3_pse+0x92>
 218:	0e 2e       	mov	r0, r30
 21a:	3a f0       	brmi	.+14     	; 0x22a <__divsf3_pse+0x3a>
 21c:	e0 e8       	ldi	r30, 0x80	; 128
 21e:	32 d0       	rcall	.+100    	; 0x284 <__divsf3_pse+0x94>
 220:	91 50       	subi	r25, 0x01	; 1
 222:	50 40       	sbci	r21, 0x00	; 0
 224:	e6 95       	lsr	r30
 226:	00 1c       	adc	r0, r0
 228:	ca f7       	brpl	.-14     	; 0x21c <__divsf3_pse+0x2c>
 22a:	2b d0       	rcall	.+86     	; 0x282 <__divsf3_pse+0x92>
 22c:	fe 2f       	mov	r31, r30
 22e:	29 d0       	rcall	.+82     	; 0x282 <__divsf3_pse+0x92>
 230:	66 0f       	add	r22, r22
 232:	77 1f       	adc	r23, r23
 234:	88 1f       	adc	r24, r24
 236:	bb 1f       	adc	r27, r27
 238:	26 17       	cp	r18, r22
 23a:	37 07       	cpc	r19, r23
 23c:	48 07       	cpc	r20, r24
 23e:	ab 07       	cpc	r26, r27
 240:	b0 e8       	ldi	r27, 0x80	; 128
 242:	09 f0       	breq	.+2      	; 0x246 <__divsf3_pse+0x56>
 244:	bb 0b       	sbc	r27, r27
 246:	80 2d       	mov	r24, r0
 248:	bf 01       	movw	r22, r30
 24a:	ff 27       	eor	r31, r31
 24c:	93 58       	subi	r25, 0x83	; 131
 24e:	5f 4f       	sbci	r21, 0xFF	; 255
 250:	3a f0       	brmi	.+14     	; 0x260 <__divsf3_pse+0x70>
 252:	9e 3f       	cpi	r25, 0xFE	; 254
 254:	51 05       	cpc	r21, r1
 256:	78 f0       	brcs	.+30     	; 0x276 <__divsf3_pse+0x86>
 258:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_inf>
 25c:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <__fp_szero>
 260:	5f 3f       	cpi	r21, 0xFF	; 255
 262:	e4 f3       	brlt	.-8      	; 0x25c <__divsf3_pse+0x6c>
 264:	98 3e       	cpi	r25, 0xE8	; 232
 266:	d4 f3       	brlt	.-12     	; 0x25c <__divsf3_pse+0x6c>
 268:	86 95       	lsr	r24
 26a:	77 95       	ror	r23
 26c:	67 95       	ror	r22
 26e:	b7 95       	ror	r27
 270:	f7 95       	ror	r31
 272:	9f 5f       	subi	r25, 0xFF	; 255
 274:	c9 f7       	brne	.-14     	; 0x268 <__divsf3_pse+0x78>
 276:	88 0f       	add	r24, r24
 278:	91 1d       	adc	r25, r1
 27a:	96 95       	lsr	r25
 27c:	87 95       	ror	r24
 27e:	97 f9       	bld	r25, 7
 280:	08 95       	ret
 282:	e1 e0       	ldi	r30, 0x01	; 1
 284:	66 0f       	add	r22, r22
 286:	77 1f       	adc	r23, r23
 288:	88 1f       	adc	r24, r24
 28a:	bb 1f       	adc	r27, r27
 28c:	62 17       	cp	r22, r18
 28e:	73 07       	cpc	r23, r19
 290:	84 07       	cpc	r24, r20
 292:	ba 07       	cpc	r27, r26
 294:	20 f0       	brcs	.+8      	; 0x29e <__divsf3_pse+0xae>
 296:	62 1b       	sub	r22, r18
 298:	73 0b       	sbc	r23, r19
 29a:	84 0b       	sbc	r24, r20
 29c:	ba 0b       	sbc	r27, r26
 29e:	ee 1f       	adc	r30, r30
 2a0:	88 f7       	brcc	.-30     	; 0x284 <__divsf3_pse+0x94>
 2a2:	e0 95       	com	r30
 2a4:	08 95       	ret

000002a6 <__floatunsisf>:
 2a6:	e8 94       	clt
 2a8:	09 c0       	rjmp	.+18     	; 0x2bc <__floatsisf+0x12>

000002aa <__floatsisf>:
 2aa:	97 fb       	bst	r25, 7
 2ac:	3e f4       	brtc	.+14     	; 0x2bc <__floatsisf+0x12>
 2ae:	90 95       	com	r25
 2b0:	80 95       	com	r24
 2b2:	70 95       	com	r23
 2b4:	61 95       	neg	r22
 2b6:	7f 4f       	sbci	r23, 0xFF	; 255
 2b8:	8f 4f       	sbci	r24, 0xFF	; 255
 2ba:	9f 4f       	sbci	r25, 0xFF	; 255
 2bc:	99 23       	and	r25, r25
 2be:	a9 f0       	breq	.+42     	; 0x2ea <__floatsisf+0x40>
 2c0:	f9 2f       	mov	r31, r25
 2c2:	96 e9       	ldi	r25, 0x96	; 150
 2c4:	bb 27       	eor	r27, r27
 2c6:	93 95       	inc	r25
 2c8:	f6 95       	lsr	r31
 2ca:	87 95       	ror	r24
 2cc:	77 95       	ror	r23
 2ce:	67 95       	ror	r22
 2d0:	b7 95       	ror	r27
 2d2:	f1 11       	cpse	r31, r1
 2d4:	f8 cf       	rjmp	.-16     	; 0x2c6 <__floatsisf+0x1c>
 2d6:	fa f4       	brpl	.+62     	; 0x316 <__floatsisf+0x6c>
 2d8:	bb 0f       	add	r27, r27
 2da:	11 f4       	brne	.+4      	; 0x2e0 <__floatsisf+0x36>
 2dc:	60 ff       	sbrs	r22, 0
 2de:	1b c0       	rjmp	.+54     	; 0x316 <__floatsisf+0x6c>
 2e0:	6f 5f       	subi	r22, 0xFF	; 255
 2e2:	7f 4f       	sbci	r23, 0xFF	; 255
 2e4:	8f 4f       	sbci	r24, 0xFF	; 255
 2e6:	9f 4f       	sbci	r25, 0xFF	; 255
 2e8:	16 c0       	rjmp	.+44     	; 0x316 <__floatsisf+0x6c>
 2ea:	88 23       	and	r24, r24
 2ec:	11 f0       	breq	.+4      	; 0x2f2 <__floatsisf+0x48>
 2ee:	96 e9       	ldi	r25, 0x96	; 150
 2f0:	11 c0       	rjmp	.+34     	; 0x314 <__floatsisf+0x6a>
 2f2:	77 23       	and	r23, r23
 2f4:	21 f0       	breq	.+8      	; 0x2fe <__floatsisf+0x54>
 2f6:	9e e8       	ldi	r25, 0x8E	; 142
 2f8:	87 2f       	mov	r24, r23
 2fa:	76 2f       	mov	r23, r22
 2fc:	05 c0       	rjmp	.+10     	; 0x308 <__floatsisf+0x5e>
 2fe:	66 23       	and	r22, r22
 300:	71 f0       	breq	.+28     	; 0x31e <__floatsisf+0x74>
 302:	96 e8       	ldi	r25, 0x86	; 134
 304:	86 2f       	mov	r24, r22
 306:	70 e0       	ldi	r23, 0x00	; 0
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	2a f0       	brmi	.+10     	; 0x316 <__floatsisf+0x6c>
 30c:	9a 95       	dec	r25
 30e:	66 0f       	add	r22, r22
 310:	77 1f       	adc	r23, r23
 312:	88 1f       	adc	r24, r24
 314:	da f7       	brpl	.-10     	; 0x30c <__floatsisf+0x62>
 316:	88 0f       	add	r24, r24
 318:	96 95       	lsr	r25
 31a:	87 95       	ror	r24
 31c:	97 f9       	bld	r25, 7
 31e:	08 95       	ret

00000320 <__fp_inf>:
 320:	97 f9       	bld	r25, 7
 322:	9f 67       	ori	r25, 0x7F	; 127
 324:	80 e8       	ldi	r24, 0x80	; 128
 326:	70 e0       	ldi	r23, 0x00	; 0
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	08 95       	ret

0000032c <__fp_nan>:
 32c:	9f ef       	ldi	r25, 0xFF	; 255
 32e:	80 ec       	ldi	r24, 0xC0	; 192
 330:	08 95       	ret

00000332 <__fp_pscA>:
 332:	00 24       	eor	r0, r0
 334:	0a 94       	dec	r0
 336:	16 16       	cp	r1, r22
 338:	17 06       	cpc	r1, r23
 33a:	18 06       	cpc	r1, r24
 33c:	09 06       	cpc	r0, r25
 33e:	08 95       	ret

00000340 <__fp_pscB>:
 340:	00 24       	eor	r0, r0
 342:	0a 94       	dec	r0
 344:	12 16       	cp	r1, r18
 346:	13 06       	cpc	r1, r19
 348:	14 06       	cpc	r1, r20
 34a:	05 06       	cpc	r0, r21
 34c:	08 95       	ret

0000034e <__fp_round>:
 34e:	09 2e       	mov	r0, r25
 350:	03 94       	inc	r0
 352:	00 0c       	add	r0, r0
 354:	11 f4       	brne	.+4      	; 0x35a <__fp_round+0xc>
 356:	88 23       	and	r24, r24
 358:	52 f0       	brmi	.+20     	; 0x36e <__fp_round+0x20>
 35a:	bb 0f       	add	r27, r27
 35c:	40 f4       	brcc	.+16     	; 0x36e <__fp_round+0x20>
 35e:	bf 2b       	or	r27, r31
 360:	11 f4       	brne	.+4      	; 0x366 <__fp_round+0x18>
 362:	60 ff       	sbrs	r22, 0
 364:	04 c0       	rjmp	.+8      	; 0x36e <__fp_round+0x20>
 366:	6f 5f       	subi	r22, 0xFF	; 255
 368:	7f 4f       	sbci	r23, 0xFF	; 255
 36a:	8f 4f       	sbci	r24, 0xFF	; 255
 36c:	9f 4f       	sbci	r25, 0xFF	; 255
 36e:	08 95       	ret

00000370 <__fp_split3>:
 370:	57 fd       	sbrc	r21, 7
 372:	90 58       	subi	r25, 0x80	; 128
 374:	44 0f       	add	r20, r20
 376:	55 1f       	adc	r21, r21
 378:	59 f0       	breq	.+22     	; 0x390 <__fp_splitA+0x10>
 37a:	5f 3f       	cpi	r21, 0xFF	; 255
 37c:	71 f0       	breq	.+28     	; 0x39a <__fp_splitA+0x1a>
 37e:	47 95       	ror	r20

00000380 <__fp_splitA>:
 380:	88 0f       	add	r24, r24
 382:	97 fb       	bst	r25, 7
 384:	99 1f       	adc	r25, r25
 386:	61 f0       	breq	.+24     	; 0x3a0 <__fp_splitA+0x20>
 388:	9f 3f       	cpi	r25, 0xFF	; 255
 38a:	79 f0       	breq	.+30     	; 0x3aa <__fp_splitA+0x2a>
 38c:	87 95       	ror	r24
 38e:	08 95       	ret
 390:	12 16       	cp	r1, r18
 392:	13 06       	cpc	r1, r19
 394:	14 06       	cpc	r1, r20
 396:	55 1f       	adc	r21, r21
 398:	f2 cf       	rjmp	.-28     	; 0x37e <__fp_split3+0xe>
 39a:	46 95       	lsr	r20
 39c:	f1 df       	rcall	.-30     	; 0x380 <__fp_splitA>
 39e:	08 c0       	rjmp	.+16     	; 0x3b0 <__fp_splitA+0x30>
 3a0:	16 16       	cp	r1, r22
 3a2:	17 06       	cpc	r1, r23
 3a4:	18 06       	cpc	r1, r24
 3a6:	99 1f       	adc	r25, r25
 3a8:	f1 cf       	rjmp	.-30     	; 0x38c <__fp_splitA+0xc>
 3aa:	86 95       	lsr	r24
 3ac:	71 05       	cpc	r23, r1
 3ae:	61 05       	cpc	r22, r1
 3b0:	08 94       	sec
 3b2:	08 95       	ret

000003b4 <__fp_zero>:
 3b4:	e8 94       	clt

000003b6 <__fp_szero>:
 3b6:	bb 27       	eor	r27, r27
 3b8:	66 27       	eor	r22, r22
 3ba:	77 27       	eor	r23, r23
 3bc:	cb 01       	movw	r24, r22
 3be:	97 f9       	bld	r25, 7
 3c0:	08 95       	ret

000003c2 <__gesf2>:
 3c2:	0e 94 53 02 	call	0x4a6	; 0x4a6 <__fp_cmp>
 3c6:	08 f4       	brcc	.+2      	; 0x3ca <__gesf2+0x8>
 3c8:	8f ef       	ldi	r24, 0xFF	; 255
 3ca:	08 95       	ret

000003cc <__mulsf3>:
 3cc:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <__mulsf3x>
 3d0:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__fp_round>
 3d4:	0e 94 99 01 	call	0x332	; 0x332 <__fp_pscA>
 3d8:	38 f0       	brcs	.+14     	; 0x3e8 <__mulsf3+0x1c>
 3da:	0e 94 a0 01 	call	0x340	; 0x340 <__fp_pscB>
 3de:	20 f0       	brcs	.+8      	; 0x3e8 <__mulsf3+0x1c>
 3e0:	95 23       	and	r25, r21
 3e2:	11 f0       	breq	.+4      	; 0x3e8 <__mulsf3+0x1c>
 3e4:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_inf>
 3e8:	0c 94 96 01 	jmp	0x32c	; 0x32c <__fp_nan>
 3ec:	11 24       	eor	r1, r1
 3ee:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <__fp_szero>

000003f2 <__mulsf3x>:
 3f2:	0e 94 b8 01 	call	0x370	; 0x370 <__fp_split3>
 3f6:	70 f3       	brcs	.-36     	; 0x3d4 <__mulsf3+0x8>

000003f8 <__mulsf3_pse>:
 3f8:	95 9f       	mul	r25, r21
 3fa:	c1 f3       	breq	.-16     	; 0x3ec <__mulsf3+0x20>
 3fc:	95 0f       	add	r25, r21
 3fe:	50 e0       	ldi	r21, 0x00	; 0
 400:	55 1f       	adc	r21, r21
 402:	62 9f       	mul	r22, r18
 404:	f0 01       	movw	r30, r0
 406:	72 9f       	mul	r23, r18
 408:	bb 27       	eor	r27, r27
 40a:	f0 0d       	add	r31, r0
 40c:	b1 1d       	adc	r27, r1
 40e:	63 9f       	mul	r22, r19
 410:	aa 27       	eor	r26, r26
 412:	f0 0d       	add	r31, r0
 414:	b1 1d       	adc	r27, r1
 416:	aa 1f       	adc	r26, r26
 418:	64 9f       	mul	r22, r20
 41a:	66 27       	eor	r22, r22
 41c:	b0 0d       	add	r27, r0
 41e:	a1 1d       	adc	r26, r1
 420:	66 1f       	adc	r22, r22
 422:	82 9f       	mul	r24, r18
 424:	22 27       	eor	r18, r18
 426:	b0 0d       	add	r27, r0
 428:	a1 1d       	adc	r26, r1
 42a:	62 1f       	adc	r22, r18
 42c:	73 9f       	mul	r23, r19
 42e:	b0 0d       	add	r27, r0
 430:	a1 1d       	adc	r26, r1
 432:	62 1f       	adc	r22, r18
 434:	83 9f       	mul	r24, r19
 436:	a0 0d       	add	r26, r0
 438:	61 1d       	adc	r22, r1
 43a:	22 1f       	adc	r18, r18
 43c:	74 9f       	mul	r23, r20
 43e:	33 27       	eor	r19, r19
 440:	a0 0d       	add	r26, r0
 442:	61 1d       	adc	r22, r1
 444:	23 1f       	adc	r18, r19
 446:	84 9f       	mul	r24, r20
 448:	60 0d       	add	r22, r0
 44a:	21 1d       	adc	r18, r1
 44c:	82 2f       	mov	r24, r18
 44e:	76 2f       	mov	r23, r22
 450:	6a 2f       	mov	r22, r26
 452:	11 24       	eor	r1, r1
 454:	9f 57       	subi	r25, 0x7F	; 127
 456:	50 40       	sbci	r21, 0x00	; 0
 458:	9a f0       	brmi	.+38     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 45a:	f1 f0       	breq	.+60     	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 45c:	88 23       	and	r24, r24
 45e:	4a f0       	brmi	.+18     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 460:	ee 0f       	add	r30, r30
 462:	ff 1f       	adc	r31, r31
 464:	bb 1f       	adc	r27, r27
 466:	66 1f       	adc	r22, r22
 468:	77 1f       	adc	r23, r23
 46a:	88 1f       	adc	r24, r24
 46c:	91 50       	subi	r25, 0x01	; 1
 46e:	50 40       	sbci	r21, 0x00	; 0
 470:	a9 f7       	brne	.-22     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 472:	9e 3f       	cpi	r25, 0xFE	; 254
 474:	51 05       	cpc	r21, r1
 476:	80 f0       	brcs	.+32     	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 478:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_inf>
 47c:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <__fp_szero>
 480:	5f 3f       	cpi	r21, 0xFF	; 255
 482:	e4 f3       	brlt	.-8      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 484:	98 3e       	cpi	r25, 0xE8	; 232
 486:	d4 f3       	brlt	.-12     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 488:	86 95       	lsr	r24
 48a:	77 95       	ror	r23
 48c:	67 95       	ror	r22
 48e:	b7 95       	ror	r27
 490:	f7 95       	ror	r31
 492:	e7 95       	ror	r30
 494:	9f 5f       	subi	r25, 0xFF	; 255
 496:	c1 f7       	brne	.-16     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 498:	fe 2b       	or	r31, r30
 49a:	88 0f       	add	r24, r24
 49c:	91 1d       	adc	r25, r1
 49e:	96 95       	lsr	r25
 4a0:	87 95       	ror	r24
 4a2:	97 f9       	bld	r25, 7
 4a4:	08 95       	ret

000004a6 <__fp_cmp>:
 4a6:	99 0f       	add	r25, r25
 4a8:	00 08       	sbc	r0, r0
 4aa:	55 0f       	add	r21, r21
 4ac:	aa 0b       	sbc	r26, r26
 4ae:	e0 e8       	ldi	r30, 0x80	; 128
 4b0:	fe ef       	ldi	r31, 0xFE	; 254
 4b2:	16 16       	cp	r1, r22
 4b4:	17 06       	cpc	r1, r23
 4b6:	e8 07       	cpc	r30, r24
 4b8:	f9 07       	cpc	r31, r25
 4ba:	c0 f0       	brcs	.+48     	; 0x4ec <__fp_cmp+0x46>
 4bc:	12 16       	cp	r1, r18
 4be:	13 06       	cpc	r1, r19
 4c0:	e4 07       	cpc	r30, r20
 4c2:	f5 07       	cpc	r31, r21
 4c4:	98 f0       	brcs	.+38     	; 0x4ec <__fp_cmp+0x46>
 4c6:	62 1b       	sub	r22, r18
 4c8:	73 0b       	sbc	r23, r19
 4ca:	84 0b       	sbc	r24, r20
 4cc:	95 0b       	sbc	r25, r21
 4ce:	39 f4       	brne	.+14     	; 0x4de <__fp_cmp+0x38>
 4d0:	0a 26       	eor	r0, r26
 4d2:	61 f0       	breq	.+24     	; 0x4ec <__fp_cmp+0x46>
 4d4:	23 2b       	or	r18, r19
 4d6:	24 2b       	or	r18, r20
 4d8:	25 2b       	or	r18, r21
 4da:	21 f4       	brne	.+8      	; 0x4e4 <__fp_cmp+0x3e>
 4dc:	08 95       	ret
 4de:	0a 26       	eor	r0, r26
 4e0:	09 f4       	brne	.+2      	; 0x4e4 <__fp_cmp+0x3e>
 4e2:	a1 40       	sbci	r26, 0x01	; 1
 4e4:	a6 95       	lsr	r26
 4e6:	8f ef       	ldi	r24, 0xFF	; 255
 4e8:	81 1d       	adc	r24, r1
 4ea:	81 1d       	adc	r24, r1
 4ec:	08 95       	ret

000004ee <_exit>:
 4ee:	f8 94       	cli

000004f0 <__stop_program>:
 4f0:	ff cf       	rjmp	.-2      	; 0x4f0 <__stop_program>
